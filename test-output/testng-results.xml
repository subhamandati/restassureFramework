<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="8" ignored="0" total="31" passed="23">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="25755" started-at="2020-06-06T20:46:05Z" finished-at="2020-06-06T20:46:31Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="25755" started-at="2020-06-06T20:46:05Z" finished-at="2020-06-06T20:46:31Z">
      <class name="com.restAssuredFramework.testCases.TC001_GET_All_Employees">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="getAllEmployees" is-config="true" duration-ms="94" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="checkContentEncoding" duration-ms="1" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="checkContentLength" duration-ms="2" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="checkContentType" duration-ms="1" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkCookies()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="checkCookies" duration-ms="2" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="checkResponseBody" duration-ms="5" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="checkResponseTime" duration-ms="2" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="checkServerType" duration-ms="10" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="checkStatusCode" duration-ms="2" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="checkStatusLine" duration-ms="3" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.restAssuredFramework.testCases.TC001_GET_All_Employees@343f4d3d]" name="tearDown" is-config="true" duration-ms="2" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.restAssuredFramework.testCases.TC001_GET_All_Employees -->
      <class name="com.restAssuredFramework.testCases.TC005_Delete_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.restAssuredFramework.testCases.TC005_Delete_Employee_Record@57baeedf]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-06T20:46:17Z" finished-at="2020-06-06T20:46:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.restAssuredFramework.testCases.TC005_Delete_Employee_Record@57baeedf]" name="createEmployee" is-config="true" duration-ms="7328" started-at="2020-06-06T20:46:17Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.restAssuredFramework.testCases.TC005_Delete_Employee_Record@57baeedf]" name="checkContentType" duration-ms="2" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.restAssuredFramework.testCases.TC005_Delete_Employee_Record@57baeedf]" name="checkResponseBody" duration-ms="2" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.restAssuredFramework.testCases.TC005_Delete_Employee_Record.checkResponseBody(TC005_Delete_Employee_Record.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.restAssuredFramework.testCases.TC005_Delete_Employee_Record@57baeedf]" name="checkServerType" duration-ms="1" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.restAssuredFramework.testCases.TC005_Delete_Employee_Record@57baeedf]" name="checkStatusCode" duration-ms="1" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.restAssuredFramework.testCases.TC005_Delete_Employee_Record@57baeedf]" name="checkStatusLine" duration-ms="1" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.restAssuredFramework.testCases.TC005_Delete_Employee_Record@57baeedf]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.restAssuredFramework.testCases.TC005_Delete_Employee_Record -->
      <class name="com.restAssuredFramework.testCases.TC003_POST_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.restAssuredFramework.testCases.TC003_POST_Employee_Record@53b32d7]" name="setup" is-config="true" duration-ms="3" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.restAssuredFramework.testCases.TC003_POST_Employee_Record@53b32d7]" name="createEmployee" is-config="true" duration-ms="6459" started-at="2020-06-06T20:46:24Z" finished-at="2020-06-06T20:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.restAssuredFramework.testCases.TC003_POST_Employee_Record@53b32d7]" name="checkContentType" duration-ms="2" started-at="2020-06-06T20:46:30Z" finished-at="2020-06-06T20:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.restAssuredFramework.testCases.TC003_POST_Employee_Record@53b32d7]" name="checkResponseBody" duration-ms="2" started-at="2020-06-06T20:46:30Z" finished-at="2020-06-06T20:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.restAssuredFramework.testCases.TC003_POST_Employee_Record@53b32d7]" name="checkServerType" duration-ms="2" started-at="2020-06-06T20:46:30Z" finished-at="2020-06-06T20:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.restAssuredFramework.testCases.TC003_POST_Employee_Record@53b32d7]" name="checkStatusCode" duration-ms="2" started-at="2020-06-06T20:46:30Z" finished-at="2020-06-06T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.restAssuredFramework.testCases.TC003_POST_Employee_Record@53b32d7]" name="checkStatusLine" duration-ms="2" started-at="2020-06-06T20:46:31Z" finished-at="2020-06-06T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.restAssuredFramework.testCases.TC003_POST_Employee_Record@53b32d7]" name="tearDown" is-config="true" duration-ms="2" started-at="2020-06-06T20:46:31Z" finished-at="2020-06-06T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.restAssuredFramework.testCases.TC003_POST_Employee_Record -->
      <class name="com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record@42e26948]" name="setup" is-config="true" duration-ms="11" started-at="2020-06-06T20:46:15Z" finished-at="2020-06-06T20:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getEmployeeData()[pri:0, instance:com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record@42e26948]" name="getEmployeeData" is-config="true" duration-ms="1143" started-at="2020-06-06T20:46:15Z" finished-at="2020-06-06T20:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployeeData -->
        <test-method status="FAIL" signature="checkContentLength()[pri:0, instance:com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record@42e26948]" name="checkContentLength" duration-ms="2" started-at="2020-06-06T20:46:16Z" finished-at="2020-06-06T20:46:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record.checkContentLength(TC002_Get_Single_Employee_Record.java:103)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="FAIL" signature="checkContentType()[pri:0, instance:com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record@42e26948]" name="checkContentType" duration-ms="6" started-at="2020-06-06T20:46:16Z" finished-at="2020-06-06T20:46:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [text/html;charset=UTF-8] but found [application/json;charset=utf-8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [text/html;charset=UTF-8] but found [application/json;charset=utf-8]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record.checkContentType(TC002_Get_Single_Employee_Record.java:78)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record@42e26948]" name="checkResponseBody" duration-ms="5" started-at="2020-06-06T20:46:16Z" finished-at="2020-06-06T20:46:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record.checkResponseBody(TC002_Get_Single_Employee_Record.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record@42e26948]" name="checkResponseTime" duration-ms="3" started-at="2020-06-06T20:46:17Z" finished-at="2020-06-06T20:46:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record@42e26948]" name="checkServerType" duration-ms="2" started-at="2020-06-06T20:46:17Z" finished-at="2020-06-06T20:46:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="FAIL" signature="checkStatusCode()[pri:0, instance:com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record@42e26948]" name="checkStatusCode" duration-ms="2" started-at="2020-06-06T20:46:17Z" finished-at="2020-06-06T20:46:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record.checkStatusCode(TC002_Get_Single_Employee_Record.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="FAIL" signature="checkStatusLine()[pri:0, instance:com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record@42e26948]" name="checkStatusLine" duration-ms="3" started-at="2020-06-06T20:46:17Z" finished-at="2020-06-06T20:46:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [HTTP/1.1 400 Bad Request]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [HTTP/1.1 400 Bad Request]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record.checkStatusLine(TC002_Get_Single_Employee_Record.java:67)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record@42e26948]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-06-06T20:46:17Z" finished-at="2020-06-06T20:46:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.restAssuredFramework.testCases.TC002_Get_Single_Employee_Record -->
      <class name="com.restAssuredFramework.testCases.TC004_PUT_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.restAssuredFramework.testCases.TC004_PUT_Employee_Record@1794d431]" name="setup" is-config="true" duration-ms="97" started-at="2020-06-06T20:46:05Z" finished-at="2020-06-06T20:46:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.restAssuredFramework.testCases.TC004_PUT_Employee_Record@1794d431]" name="createEmployee" is-config="true" duration-ms="10218" started-at="2020-06-06T20:46:05Z" finished-at="2020-06-06T20:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="FAIL" signature="checkContentType()[pri:0, instance:com.restAssuredFramework.testCases.TC004_PUT_Employee_Record@1794d431]" name="checkContentType" duration-ms="12" started-at="2020-06-06T20:46:15Z" finished-at="2020-06-06T20:46:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [text/html;charset=UTF-8] but found [application/json;charset=utf-8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [text/html;charset=UTF-8] but found [application/json;charset=utf-8]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.restAssuredFramework.testCases.TC004_PUT_Employee_Record.checkContentType(TC004_PUT_Employee_Record.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.restAssuredFramework.testCases.TC004_PUT_Employee_Record@1794d431]" name="checkResponseBody" duration-ms="31" started-at="2020-06-06T20:46:15Z" finished-at="2020-06-06T20:46:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.restAssuredFramework.testCases.TC004_PUT_Employee_Record.checkResponseBody(TC004_PUT_Employee_Record.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.restAssuredFramework.testCases.TC004_PUT_Employee_Record@1794d431]" name="checkServerType" duration-ms="9" started-at="2020-06-06T20:46:15Z" finished-at="2020-06-06T20:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.restAssuredFramework.testCases.TC004_PUT_Employee_Record@1794d431]" name="checkStatusCode" duration-ms="3" started-at="2020-06-06T20:46:15Z" finished-at="2020-06-06T20:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.restAssuredFramework.testCases.TC004_PUT_Employee_Record@1794d431]" name="checkStatusLine" duration-ms="81" started-at="2020-06-06T20:46:15Z" finished-at="2020-06-06T20:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.restAssuredFramework.testCases.TC004_PUT_Employee_Record@1794d431]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-06-06T20:46:15Z" finished-at="2020-06-06T20:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.restAssuredFramework.testCases.TC004_PUT_Employee_Record -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
